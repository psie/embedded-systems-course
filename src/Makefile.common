OS := $(shell uname)

# Setting the right shell for make
ifeq ($(OS), Linux)
	SHELL := $(shell getent passwd $$LOGNAME | sed "s/.*[:]\(.*\)$$/\1/")
endif

# Microcontroller settings
MCU = atmega328p
F_CPU = 16000000

# Device for programmer
ifeq ($(OS), Linux)
	PORT = $(wildcard /dev/ttyACM*)
else
	PORT = $(wildcard /dev/tty.usbmodemf*)
endif

AR      = avr-ar
AS      = avr-as
CC      = avr-gcc -mmcu=$(MCU)
CXX     = avr-g++ -mmcu=$(MCU)
OBJCOPY = avr-objcopy
OBJDUMP = avr-objdump
RANLIB  = avr-ranlib
READELF = avr-readelf

ifeq ($(OS), Linux)
	SEDI = sed -i
else # OS X sed
	SEDI = sed -i ""
endif

ARFLAGS  =
CFLAGS   = -g -Os -Wall -Wextra -Werror
CPPFLAGS = -DF_CPU=$(F_CPU)
CXXFLAGS = $(CFLAGS) -std=c++11 -fno-rtti
LDFLAGS  =
LDLIBS   =

FMT = "%6s  %-32s { %s }\n"

%.o: %.c
	@printf $(FMT) "CC" "$@" "$(subst ../,,$^)"
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

%.o: %.cpp
	@printf $(FMT) "CXX" "$@" "$(subst ../,,$^)"
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

%.a:
	@printf $(FMT) "LIB" "$@" "$^"
	$(AR) cr $@ $^
	$(RANLIB) $@

%.elf:
	@printf $(FMT) "LINK" "$@" "$^ $(LDLIBS)"
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@

%.lst: %.elf
	@printf $(FMT) "LST" "$@" "$^"
	$(OBJDUMP) -h -S $^ > $@

%.lst: %.o
	@printf $(FMT) "LST" "$@" "$^"
	$(OBJDUMP) -h -S $^ > $@

.PRECIOUS: %.elf

%.hex: %.elf
	@printf $(FMT) "HEX" "$@" "$(shell tools/memusage.py $<)"
	$(OBJCOPY) -j .text -j .data -O ihex $< $@

info-%: %.elf
	$(READELF) -S $<

install-%: %.hex
	avrdude -p $(MCU) -c arduino -P $(PORT) -v -U flash:w:$<

%.d: %.c
	$(CC) -MD -MM $(CPPFLAGS) -o $@ $<
	$(SEDI) -e "s,\($*\)\.o[ :]*,\1.o $@ : ,g" $@

%.d: %.cpp
	$(CXX) -MD -MM $(CPPFLAGS) -o $@ $<
	$(SEDI) -e "s,\($*\)\.o[ :]*,\1.o $@ : ,g" $@

clean::
	rm -vf *.{elf,hex,d,o,a,map,lst,rpo} *~

ifneq ($(VERBOSE), 1)
.SILENT:
endif
